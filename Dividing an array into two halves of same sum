const canPartition = nums => {
    const sum = nums.reduce((a, b) => a + b, 0);
    
    if (sum % 2 !== 0) {
        return false;
    }
    
    const half = sum / 2; // Never will have decimal, hence safe to just divide.
    
    // Now, our aim is to find if atleast one subarray has the sum equal to the value `half`
    // As we can be sure that the other half of the subarray will have the same value
    
    const dp = [true];
    
    for (const num of nums) {
        for (var i = 1; i <= num; i++) {
            dp[i] = dp[i] || dp[i - num];
            console.log(dp);
        }
    }
    
    return dp[half] || false;
};

console.log(canPartition([1,5,11,5]))
